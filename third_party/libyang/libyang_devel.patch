diff -Naur libyang-devel.org/CMakeLists.txt libyang-devel/CMakeLists.txt
--- libyang-devel.org/CMakeLists.txt	2020-04-08 08:37:32.158974445 +1000
+++ libyang-devel/CMakeLists.txt	2020-04-08 08:40:07.487513482 +1000
@@ -202,7 +202,7 @@
     set(CMAKE_FIND_LIBRARY_SUFFIXES .a)
     set(CMAKE_EXE_LINK_DYNAMIC_C_FLAGS)       # remove -Wl,-Bdynamic
     set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS)
-    add_library(yang STATIC ${libsrc} compat)
+    add_library(yang STATIC ${libsrc} $<TARGET_OBJECTS:compat>)
 
     # switch off the tests
     if(ENABLE_BUILD_TESTS)
@@ -217,7 +217,7 @@
 else()
     set(CMAKE_POSITION_INDEPENDENT_CODE TRUE)
     add_library(yangobj OBJECT ${libsrc})
-    add_library(yang SHARED $<TARGET_OBJECTS:yangobj> compat)
+    add_library(yang SHARED $<TARGET_OBJECTS:yangobj> $<TARGET_OBJECTS:compat>)
 
     #only for tests with visible internal symbols
     add_library(yangobj_tests OBJECT ${libsrc})
@@ -336,13 +336,13 @@
 
 # yanglint
 add_executable(yanglint ${lintsrc})
-target_link_libraries(yanglint yang compat)
+target_link_libraries(yanglint yang $<TARGET_OBJECTS:compat>)
 install(TARGETS yanglint DESTINATION ${CMAKE_INSTALL_BINDIR})
 install(FILES ${PROJECT_SOURCE_DIR}/tools/lint/yanglint.1 DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)
 
 #yangre
 add_executable(yangre ${resrc})
-target_link_libraries(yangre yang compat)
+target_link_libraries(yangre yang $<TARGET_OBJECTS:compat>)
 install(TARGETS yangre DESTINATION ${CMAKE_INSTALL_BINDIR})
 install(FILES ${PROJECT_SOURCE_DIR}/tools/re/yangre.1 DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)
 
diff -Naur libyang-devel.org/src/user_types/CMakeLists.txt libyang-devel/src/user_types/CMakeLists.txt
--- libyang-devel.org/src/user_types/CMakeLists.txt	2020-04-08 08:37:32.162974461 +1000
+++ libyang-devel/src/user_types/CMakeLists.txt	2020-04-08 08:42:16.035850956 +1000
@@ -1,7 +1,7 @@
 macro(USER_TYPE_PLUGIN PLUGIN_NAME SRCS)
     add_library(${PLUGIN_NAME} SHARED ${SRCS})
     set_target_properties(${PLUGIN_NAME} PROPERTIES PREFIX "")
-    target_link_libraries(${PLUGIN_NAME} yang compat)
+    target_link_libraries(${PLUGIN_NAME} yang $<TARGET_OBJECTS:compat>)
     install(TARGETS ${PLUGIN_NAME} DESTINATION ${USER_TYPES_PLUGINS_DIR_MACRO})
 endmacro(USER_TYPE_PLUGIN)
 
